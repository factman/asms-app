{"version":3,"sources":["webpack:///./src/app/my-orders/my-orders.module.ts","webpack:///./src/app/my-orders/my-orders.page.html","webpack:///./src/app/my-orders/my-orders.page.scss","webpack:///./src/app/my-orders/my-orders.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEG;AAEhD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,4DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,ybAAyb,aAAa,+LAA+L,aAAa,0jBAA0jB,8CAA8C,6HAA6H,iBAAiB,aAAa,8CAA8C,4FAA4F,iBAAiB,uGAAuG,8BAA8B,0JAA0J,6CAA6C,4HAA4H,wBAAwB,6L;;;;;;;;;;;ACAhhE,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;ACAb;AACa;AACxB;AAC0B;AAOjE;IAME,sBAAoB,MAAc,EAAU,GAAsB,EAAU,QAA0B;QAAlF,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,aAAQ,GAAR,QAAQ,CAAkB;QAJtG,SAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC1B,WAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC;QACpC,SAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;IAEgE,CAAC;IAE3G,+BAAQ,GAAR;IACA,CAAC;IATU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qGAAoC;;SAErC,CAAC;+EAO4B,sDAAM,EAAe,8EAAiB,EAAoB,4EAAgB;OAN3F,YAAY,CAWxB;IAAD,mBAAC;CAAA;AAXwB","file":"my-orders-my-orders-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyOrdersPage } from './my-orders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyOrdersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MyOrdersPage]\n})\nexport class MyOrdersPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button color=\\\"light\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      My Orders\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button routerLink=\\\"/cart\\\">\\n        <ion-icon name=\\\"cart\\\"></ion-icon>\\n        <ion-badge *ngIf=\\\"cart.length >= 1\\\" mode=\\\"ios\\\" color=\\\"primary\\\" slot=\\\"end\\\">{{cart.length}}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<div class=\\\"total-con\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <h3>Total Orders: {{keys.length}}</h3>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</div>\\n\\n<ion-content color=\\\"light\\\">\\n  <div id=\\\"cart\\\">\\n    <ion-card *ngIf=\\\"orders.length < 1\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-icon name=\\\"basket\\\" slot=\\\"start\\\" color=\\\"medium\\\"></ion-icon>\\n              <ion-label color=\\\"medium\\\">No Orders yet</ion-label>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card>\\n\\n    <ion-card *ngFor=\\\"let item of keys\\\" color=\\\"{{orders[item].payment ? 'success' : 'warning'}}\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\" routerLink=\\\"/my-order/{{orders[item].id}}\\\" color=\\\"{{orders[item].payment ? 'success' : 'warning'}}\\\">\\n              <ion-label color=\\\"dark\\\">\\n                <strong>Order ID:</strong> {{orders[item].id}}\\n              </ion-label>\\n              <ion-badge mode=\\\"ios\\\" slot=\\\"end\\\" color=\\\"dark\\\">Qty: {{orders[item].products.length}}</ion-badge>\\n            </ion-item>\\n            <ion-row>\\n              <ion-col>\\n                <ion-label color=\\\"dark\\\" class=\\\"price\\\">&#8358;{{currency.formatCurrency(orders[item].total)}}</ion-label>\\n              </ion-col>\\n              <ion-col>\\n                <ion-label class=\\\"date\\\" color=\\\"dark\\\">{{orders[item].createdAt}}</ion-label>\\n              </ion-col>\\n            </ion-row>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card>\\n    <br/>\\n  </div>\\n  <br/>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LW9yZGVycy9teS1vcmRlcnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {ConstantsService} from '../services/constants.service';\nimport {Router} from '@angular/router';\nimport {ControllerService} from '../services/controller.service';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.page.html',\n  styleUrls: ['./my-orders.page.scss'],\n})\nexport class MyOrdersPage implements OnInit {\n\n  cart = this.api.getCart();\n  orders = this.api.getOrders() || [];\n  keys = Object.keys(this.orders).reverse();\n\n  constructor(private router: Router, private api: ControllerService, private currency: ConstantsService) { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}